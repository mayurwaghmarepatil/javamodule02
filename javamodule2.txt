Q1. What are the Conditional Operators in Java?

There are three types of the conditional operator in Java:

1) Conditional AND
2) Conditional OR
3) Ternary Operator

Q2. What are the types of operators based on the number of operands?

There are two types of mathematical operators: 
1) unary 
2) binary. 
Unary operators perform an action with a single operand. 
Binary operators perform actions with two operands.

Q3.What is the use of Switch case in Java programming?

1) There can be one or N number of case values for a switch expression.
2) The case value must be of switch expression type only. The case value must be literal or constant. It doesn't allow variables.
3) The case values must be unique. In case of duplicate value, it renders compile-time error.
4) The Java switch expression must be of byte, short, int, long (with its Wrapper type), enums and string.
5) Each case statement can have a break statement which is optional. When control reaches to the break statement, it jumps the control after the switch expression. If a break statement is not found, it executes the next case.
6) The case value can have a default label which is optional.

Q4.What are the conditional Statements and use of conditional statements in Java?

1) Conditional statements in Java are used to make decisions based on certain conditions.
2) The most common conditional statements in Java are the If-Else statement, the Switch statement, and the Ternary Operator. 
3) These statements allow the program to execute different blocks of code based on specific conditions.

Q5.What is the syntax of if else statement?

1) An if statement can be followed by an optional else if...else statement, which is very useful to test various conditions using single if...else if statement.
2) When using if...else if..else statements, there are few points to keep in mind −
3) An if can have zero or one else's and it must come after any else if's.
4)An if can have zero to many else if's and they must come before the else.
5) Once an else if succeeds, none of the remaining else if's or else's will be tested.

Q6.How do you compare two strings in Java?

We can compare String in Java on the basis of content and reference.

It is used in authentication (by equals() method), sorting (by compareTo() method), reference matching (by == operator) etc.

There are three ways to compare String in Java:

By Using equals() Method
By Using == Operator
By compareTo() Method

Q7.What is Mutable String in Java Explain with an example

Mutable means changing over time or that can be changed.
 In a mutable string, we can change the value of the string and JVM doesn’t create a new object.
 In a mutable string, we can change the value of the string in the same object.
To create a mutable string in java, Java has two classes StringBuffer and StringBuilder where the String class is used for the immutable string.

Q8.Write a program to sort a String Alphabetically

import java.util.*;

public class Main
{
public static void main(String[] args)
{
 String str;
 Scanner sc = new Scanner(System.in);
       System.out.println("Enter the string : ");
    str = sc.nextLine();
    int j = 0;
    char temp = 0;
    char[] chars = str.toCharArray();
    for (int i = 0; i < chars.length; i++) 
{
    for (j = 0; j < chars.length; j++)
 {
  if (chars[j] > chars[i]) {
  temp = chars[i];
  chars[i] = chars[j];
  chars[j] = temp;
}
 }
}
System.out.println("The sorted string is : ");
for (int i = 0; i < chars.length; i++) {
System.out.print(chars[i]);
		}

	}
}


Q9.Write a program to check if the letter 'e' is present in the word'Umbrella'


class Umbrella
{
static boolean isWordPresent(String sentence, String word)
{
	String []s = sentence.split(" ");

	for ( String temp :s)
	{
		if (temp.compareTo(word) == 0)
		{
			return true;
		}
	}
	return false;
}
public static void main(String[] args)
{
	String s = "Geeks for Geeks";
	String word = "Geeks";

	if (isWordPresent(s, word))
		System.out.print("Yes");
	else
		System.out.print("No");

}
}


Q10.Where exactly is the string constant pool located in the memory?

Heap memory
The Java string constant pool is an area in heap memory where Java stores literal string values. 
The heap is an area of memory used for run-time operations.
 When a new variable is created and given a value, Java checks to see if that exact value exists in the pool.